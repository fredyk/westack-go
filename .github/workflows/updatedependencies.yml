name: Update Dependencies
on:
  schedule:
      - cron: '0 0/6 * * *'
  push:
    branches:
      - update-dependencies
  pull_request:
    branches:
      - update-dependencies
jobs:

  update_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Checkout update-dependencies
        run: |
          git fetch
          git checkout -b update-dependencies origin/update-dependencies
          git pull

      - name: Merge PR
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git merge --no-edit --allow-unrelated-histories ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.6

      - name: Install Go Dependencies
        run: |
          go get -u ./...

      - name: Select first changed dependency from go.mod
        id: get_changed_dependency
        run: |
          # Only first
          first_changed=$(git diff -- go.mod | grep -E '^\+[[:space:]]{1,}([a-z0-9\/\.\-]+) [a-z0-9\.\-]+' | head -n 1)
          # Trim leading +
          first_changed=$(echo "$first_changed" | sed 's/^\+//')
          # Trim optional trailing comments starting with //
          first_changed=$(echo "$first_changed" | sed 's/[[:space:]]*\/\/.*$//')
          # Trim leading and trailing whitespace. And empty lines.
          first_changed=$(echo "$first_changed" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;/^$/d')
          echo "Changed dependency: $first_changed"
          echo "first_changed=$first_changed" >> $GITHUB_OUTPUT
          # If nothing changed, exit
          if [ -z "$first_changed" ]; then
              echo "No changes in go.mod"
              exit 0
          fi

      - name: Revert go.mod and apply single change
        if: steps.get_changed_dependency.outputs.first_changed != ''
        run: |
          git checkout --
          # Parse first_changed into module and version
          module=$(echo "${{ steps.get_changed_dependency.outputs.first_changed }}" | cut -d' ' -f1)
          version=$(echo "${{ steps.get_changed_dependency.outputs.first_changed }}" | cut -d' ' -f2)
          echo "new_version=$version" >> $GITHUB_OUTPUT
          echo "Changed module: $module"
          go get -u $module
          go mod tidy
          go mod verify
          go mod download 

      - name: Commit changes
        if: steps.get_changed_dependency.outputs.first_changed != ''
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "[dep-bot] Update ${{ steps.get_changed_dependency.outputs.first_changed }} to version ${{ steps.get_changed_dependency.outputs.new_version }}"
          git push origin update-dependencies