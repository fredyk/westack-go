name: Update Dependencies
on:
  schedule:
      - cron: '0 2,8,14,20 * * *'
      - cron: '10 12 * * *'
  push:
    branches:
      - update-dependencies

jobs:

  update_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Checkout update-dependencies
        run: |
          git fetch
          git checkout -b update-dependencies origin/update-dependencies
          git pull

      - name: Merge PR
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git merge --no-edit --allow-unrelated-histories ${{ github.event.pull_request.head.sha }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.6

      - name: Install Go Dependencies
        run: |
          go get -u ./...

      - name: Select first changed dependency from go.mod
        id: get_changed_dependency
        run: |
          # Only first
          first_changed=$(git diff -- go.mod | grep -E '^\+[[:space:]]{1,}([a-z0-9\/\.\-]+) [a-z0-9\.\-]+' | head -n 1)
          # Trim leading +
          first_changed=$(echo "$first_changed" | sed 's/^\+//')
          # Trim optional trailing comments starting with //
          first_changed=$(echo "$first_changed" | sed 's/[[:space:]]*\/\/.*$//')
          # Trim leading and trailing whitespace. And empty lines.
          first_changed=$(echo "$first_changed" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;/^$/d')
          echo "Changed dependency: $first_changed"
          echo "first_changed=$first_changed" >> $GITHUB_OUTPUT
          module=$(echo "$first_changed" | cut -d' ' -f1)
          version=$(echo "$first_changed" | cut -d' ' -f2)
          escaped_module=$(echo "$module" | sed 's/[^a-zA-Z0-9]/-/g')
          echo "module=$module" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "escaped_module=$escaped_module" >> $GITHUB_OUTPUT
          # If nothing changed, exit
          if [ -z "$first_changed" ]; then
              echo "No changes in go.mod"
              exit 0
          fi

      - name: Revert go.mod and apply single change
        if: steps.get_changed_dependency.outputs.first_changed != ''
        run: |
          git checkout -- go.mod go.sum
          # Parse first_changed into module and version
          module=${{ steps.get_changed_dependency.outputs.module }}
          version=${{ steps.get_changed_dependency.outputs.version }}
          echo "Changed module: $module"
          go get $module@$version
          go mod tidy
          go mod verify
          go mod download 

      - name: Commit changes
        id: commit_changes
        if: steps.get_changed_dependency.outputs.first_changed != ''
        run: |
          module=${{ steps.get_changed_dependency.outputs.module }}
          version=${{ steps.get_changed_dependency.outputs.version }}
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git stash
          # git push origin update-dependencies
          # replace non-alphanumeric characters with scores
          escaped_module=${{ steps.get_changed_dependency.outputs.escaped_module }}
          # Create new branch and push. If it already exists in remote, it will fail, need fetch and pull first
          git checkout -b update-dependency-$escaped_module
          git config pull.rebase true
          git pull --rebase origin update-dependency-$escaped_module || true
          git stash pop
          git commit -m "[dep-bot] Updated $module to $version"
          git push origin update-dependency-$escaped_module
          # Obtain full commit sha
          commit_sha=$(git rev-parse HEAD)
          echo "commit_sha=$commit_sha" >> $GITHUB_OUTPUT
          echo "Create PR with commit_sha=$commit_sha"
          # git checkout update-dependencies

      - name: Create Pull Request
        if: steps.get_changed_dependency.outputs.first_changed != ''
        uses: peter-evans/create-pull-request@v3
        with:
            token: ${{ secrets.PULL_REQUEST_TOKEN }}
            commit-message: "[dep-bot] Updated ${{ steps.get_changed_dependency.outputs.module }} to ${{ steps.get_changed_dependency.outputs.version }}"
            title: "[dep-bot] Updated ${{ steps.get_changed_dependency.outputs.module }} to ${{ steps.get_changed_dependency.outputs.version }}"
            body: |
              Updated ${{ steps.get_changed_dependency.outputs.module }} to ${{ steps.get_changed_dependency.outputs.version }}
            branch: refs/heads/update-dependency-${{ steps.get_changed_dependency.outputs.escaped_module }}
            base: update-dependencies
            labels: |
              auto-merge
              auto-merge-squash
