# on push to any branch that is not alpha, create a pull request to merge the branch into alpha
name: Alpha Channel

on:
  push:
    branches-ignore:
      - alpha
#      - update-dependency-* # ignore branches created by the update-dependencies workflow
      - dependabot/** # ignore branches created by dependabot
      - temp-branch-** # ignore branches created by the auto-merge workflow

jobs:

    alpha:
        runs-on: ubuntu-latest
        env:
          GITHUB_TOKEN: ${{ secrets.PULL_REQUEST_TOKEN }}
        steps:
        - name: Checkout
          uses: actions/checkout@v3

#        - name: Create Pull Request Using Action
#          uses: peter-evans/create-pull-request@v3
#          with:
#              token: ${{ secrets.PULL_REQUEST_TOKEN }}
#              commit-message: Merge ${{ github.ref }} into alpha
#              title: Merge ${{ github.ref }} into alpha
#              body: |
#                Merge ${{ github.ref }} into alpha
#              branch: ${{ github.ref }}
#              base: alpha
#              labels: |
#                auto-merge
#                auto-merge-squash

        - name: Create Pull Request Using REST API
          run: |
            # Make the request without labels. Export it to a file so we can add labels later. Also save response headers
            # curl \
            #   -s \
            #   -X POST \
            #   -H "Accept: application/vnd.github.v3+json" \
            #   -H "Authorization: token ${{ secrets.PULL_REQUEST_TOKEN }}" \
            #   https://api.github.com/repos/${{ github.repository }}/pulls \
            #   -d '{"title":"Merge ${{ github.ref }} into alpha","body":"Merge ${{ github.ref }} into alpha","head":"${{ github.ref }}","base":"alpha"}' \
            #   -o pull_request.json
            curl \
              -s \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.PULL_REQUEST_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/pulls \
              -d '{"title":"Merge ${{ github.ref }} into alpha","body":"Merge ${{ github.ref }} into alpha","head":"${{ github.ref }}","base":"alpha"}' \
              -D pull_request_headers.txt \
              -o pull_request.json 
            result=$?
            if [ $result -ne 0 ]; then
              echo "WARNING: curl failed with exit code $result"
              exit 0
            fi
            # check retry-after header
            retry_after=$(grep -iP "^retry-after" pull_request_headers.txt | awk '{print $2}')
            if [ -n "$retry_after" ]; then
              echo "WARNING: retry-after header found with value $retry_after"
              exit 0
            fi
            # Add the labels to the pull request
            issue_url=$(jq -r '.issue_url' pull_request.json)
            echo "Adding labels to pull request $issue_url"
            # If no issue_url found, exit with success
            if [ "$issue_url" == "null" ]; then
              echo "WARNING: No issue_url found in pull_request.json"
              exit 0
            fi
            curl \
              -s \
              -X PUT \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.PULL_REQUEST_TOKEN }}" \
              "$issue_url/labels" \
              -d '["auto-merge","auto-merge-squash"]'

        - name: Always upload pull_request.json
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: pull_request.json
            path: pull_request.json

        - name: Always upload pull_request_headers.txt
          if: always()
          uses: actions/upload-artifact@v3
          with:
              name: pull_request_headers.txt
              path: pull_request_headers.txt